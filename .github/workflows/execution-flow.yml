# Github action by default aborted the entire job if one step is failed.

# if:steps.run-ido-test.outcome
# steps - is a built in api for refrencing other steps in a job.
# outcome - is the result of the step (failure / success / cancelled / skipped)

# Special Conditional Functions:
# failure() - return true when any previous step failed
# success() - return true when every single step is done successfuly
# cancelled() - return true if the workflow has been canclled
# always() - return true always 

name: Website Deployment
on:
  push:
    branches:
      - master
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Lint code
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Test code
        id: run-ido-test  # We can add id filed to any step for refrencing
        run: npm run test
      - name: Upload test report
      # NOTICE: steps.run-ido-test.outcome == 'failure' alone is not sufficuent for continue the step if the last step is failed (like we want for the example) 
      # For overwritten the default behaviour of Github Action we have to add the failure() method
        if: failure() && steps.run-ido-test.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Build website
        id: build-website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
      - name: Output contents
        run: ls
      - name: Deploy
        run: echo "Deploying..."
